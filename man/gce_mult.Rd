% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/multinomial.R
\name{gce_mult}
\alias{gce_mult}
\title{Multinominal Choice Model}
\usage{
gce_mult(Y, X, dimV, nu, p0, w0, optim_method = "BFGS")
}
\arguments{
\item{Y}{Dependent Variable: an (NxJ) matrix where N represents the number of individuals and J is the number of choices}

\item{X}{Independent Variable(s): (NxK) where K represents number of independent variables}

\item{dimV}{An optional argument (scalar) representing dimensions of the support space for the error terms, default value is 5.}

\item{nu}{An optional argument (scalar) representing the trade-off between prediction and precision}

\item{p0}{Optional: Prior probabilities associated with the unknown P matrix}

\item{w0}{Optional: Prior probabilities associated with the error terms}

\item{optim_method}{Optional: same as the "method" argument for the "optim" function in "stats"}
}
\value{
This function returns a list which has the following elements.
\itemize{
  \item lambda - Estimated Lagrange Multipliers.
  \item hess - Hessian matrix associated with the Lagrange Multipliers.
  \item p - Estimated transition matrix.
  \item w - Estimated probabilities associated with the error terms.
  \item e - Estimated Residuals.
  \item marg_eff - Marginal Effects of independent variables on the individual choices.
  \item Sp - The (signal) information of the whole system.
  \item S_p_j - Reflects the (signal) information in each moment.
  \item p_e_j - Error bounds based on the weaker version of the Fano's inequality
  \item H_p_w - Value of the joint entropies of \code{p} and \code{w} at the final iteration.
  \item ER - Entropy Ratio Statistic.
  \item Pseudo_R2 - Pseudo R-squared.
  \item CM - Confusion matrix.
  \item conv - convergence (same as in the optim function).
}
}
\description{
Multinominal Choice Model
}
\examples{
Y <- c(0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1)
Y <- matrix(Y, nrow = 4, byrow = TRUE)
X <- c(1, 3, 1, 2, 1, 5, 1, 4)
X <- matrix(X, nrow = 4, byrow = TRUE)
gce_mult(Y, X)
gce_mult(Y, X, 3)
gce_mult(Y, X, 3, 0.6)
}
